apply plugin: 'com.android.application'

android {
    compileSdkVersion androidCompileSdkVersion
    defaultConfig {
        applicationId "com.ishook.inc.ychat"
        minSdkVersion 19
        targetSdkVersion androidCompileSdkVersion
        versionCode 23
        versionName "3.1"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    buildTypes {
        release {
            shrinkResources false
            minifyEnabled false
        }
        debug {
            shrinkResources false
            minifyEnabled false
        }
    }
    productFlavors {
    }

    splits {

        // Configures multiple APKs based on ABI.
        abi {

            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86 and x86_64.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "x86", "armeabi-v7a", "arm64-v8a", "x86_64"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk false
        }
    }
}
// Map for the version code that gives each ABI a value.
ext.abiCodes = ['armeabi-v7a':1, x86:2, x86_64:3, 'arm64-v8a':4]

// For per-density APKs, create a similar map like this:
// ext.densityCodes = ['mdpi': 1, 'hdpi': 2, 'xhdpi': 3]

import com.android.build.OutputFile

// For each APK output variant, override versionCode with a combination of
// ext.abiCodes * 1000 + variant.versionCode. In this example, variant.versionCode
// is equal to defaultConfig.versionCode. If you configure product flavors that
// define their own versionCode, variant.versionCode uses that value instead.
android.applicationVariants.all { variant ->

    // Assigns a different version code for each output APK
    // other than the universal APK.
    variant.outputs.each { output ->

        // Stores the value of ext.abiCodes that is associated with the ABI for this variant.
        def baseAbiVersionCode =
                // Determines the ABI for this variant and returns the mapped value.
                project.ext.abiCodes.get(output.getFilter(OutputFile.ABI))

        // Because abiCodes.get() returns null for ABIs that are not mapped by ext.abiCodes,
        // the following code does not override the version code for universal APKs.
        // However, because we want universal APKs to have the lowest version code,
        // this outcome is desirable.
        if (baseAbiVersionCode != null) {

            // Assigns the new version code to versionCodeOverride, which changes the version code
            // for only the output APK, not for the variant itself. Skipping this step simply
            // causes Gradle to use the value of variant.versionCode for the APK.
            output.versionCodeOverride =
                    baseAbiVersionCode * 1000 + variant.versionCode
        }

    }
}
    dependencies {
        implementation fileTree(include: ['*.jar'], dir: 'libs')
        implementation 'androidx.appcompat:appcompat:1.3.0'
        implementation 'androidx.legacy:legacy-support-v4:1.0.0'
        implementation 'org.jsoup:jsoup:1.10.1'
        implementation 'com.koushikdutta.urlimageviewhelper:urlimageviewhelper:1.0.4'
        implementation 'com.google.android.material:material:1.3.0'
        implementation 'com.mcxiaoke.volley:library:1.0.19'
        implementation 'androidx.cardview:cardview:1.0.0'
        implementation 'androidx.recyclerview:recyclerview:1.2.0'
        implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.21'
        implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
        implementation 'com.github.bumptech.glide:glide:4.12.0'
        implementation 'de.hdodenhof:circleimageview:3.1.0'
        implementation 'com.squareup.picasso:picasso:2.71828'
        implementation 'com.github.pwittchen:infinitescroll:0.0.1'
        implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
        implementation 'com.amitshekhar.android:android-networking:1.0.1'
        implementation 'com.squareup:otto:1.3.8'
        implementation 'com.google.firebase:firebase-messaging:20.2.4'
        implementation project(path: ':chat')

        testImplementation 'junit:junit:4.13.2'
        implementation 'com.squareup.retrofit:retrofit:1.9.0'
        implementation 'com.twilio:voice-android:2.0.9'

        androidTestImplementation 'androidx.test.ext:junit:1.1.2'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

        implementation 'com.github.GoodieBag:Pinview:v1.4'

    }

    apply plugin: 'com.google.gms.google-services'
